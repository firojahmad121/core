{% extends "@UVDeskCore//Templates//layout.html.twig" %}

{% block title %}forgot password {% endblock %}

{% block templateCSS %}
<style>
    #loginForm h1 {
        font-size: 28px;
        color: #6F6F6F;
        font-weight: 600;
        margin: 0px 0px 10px 0px;
    }

    .forgot-password-cta {
        position: absolute;
        font-size: 15px !important;
        right: 0px;
        top: 0px;
    }
</style>
{% endblock %}

{% block pageWrapper %}
    <div class="uv-large-box-plank">
		<div class="uv-large-box-rt">
			<div class="uv-center-box uv-text-center">
                <form action="" method="post" id="loginForm">
                    <div class="uv-adjacent-center">
                        <h1>Forgot Your Password <span class="uv-brand">Helpdesk Panel</span></h1>
                        <p>Create new password from below, if you have already reset your password  :  
                            <a href="{{ path('helpdesk_member_handle_login') }} "> click here to login </a>
                        </p>
                        
                        <div class="uv-adjacent-form">
                            <div class="uv-adjacent-element-block">
                                <label>Password</label>
                                <div class="uv-max-field">
                                    <input class="uv-field" type="password" name="password[first]">
                                </div>
                            </div>
                            <div class="uv-adjacent-element-block">
                                <label>Confirm Password</label>
                                <div class="uv-max-field">
                                <input class="uv-field" type="password" name="password[second]">
                                </div>
                            </div>
                            <button class="uv-btn">{{ 'Save Password'|trans }}</button>
                        </div>
                    </div>
                </div>
            </form>
		</div>

		<div class="uv-large-box-lt">
			<div class="uv-center-box uv-text-center">
				<a href="https://www.uvdesk.com">
                    <img alt="UVdesk" title="UVdesk" src="{{ asset('bundles/uvdeskcore/images/uvdesk-logo-symbol.svg') }}">
				</a>
            </div>
		</div>
	</div>
{% endblock %}

{% block footer %}
    {{ parent() }}
    <script type="text/javascript">
		$(function () {
			var ResetPasswordModel = Backbone.Model.extend({
				validation: {
					'userValid[password][first]' : function(value) {
                        if(value == undefined || value == '')
                            return '{{ "This field is mandatory"|trans }}';
                            
						if(value.length < 8) 
                            return '{{ "Password must contains 8 Characters"|trans }}';
                    },
                    'userValid[password][second]': {
                        equalTo: 'userValid[password][first]',
                        msg: '{{ "The passwords does not match"|trans }}'
                    },
				}
			});

			var ResetPasswordForm = Backbone.View.extend({
                events: {
                    'blur input': 'formChanegd',
                    'click .uv-btn': 'submit'
                },
                initialize: function () {
                    Backbone.Validation.bind(this);
					{% if error.messageKey is defined %}
                        app.appView.renderResponseAlert({'alertClass': 'danger', 'alertMessage': "{{ error.messageKey }}"})
                    {% endif %}
					
                    var jsonContext = JSON.parse('{{ errors }}');
		    		for (var field in jsonContext) {
                        if(field == 'first') {
                            Backbone.Validation.callbacks.invalid(this, "userValid[password][" + field + "]", jsonContext[field], 'input');
                        } else {
		    			    Backbone.Validation.callbacks.invalid(this, "userValid[" + field + "]", jsonContext[field], 'input');
                        }
					}
                },
                formChanegd: function(e) {
			    	this.model.set(Backbone.$(e.currentTarget).attr('name'), Backbone.$(e.currentTarget).val())
			    	this.model.isValid([Backbone.$(e.currentTarget).attr('name')])
			    },
				submit: function (e) {
					e.preventDefault()

					var data = this.$el.serializeObject();
					this.model.set(data);
					if(this.model.isValid(true)){
						this.$el.submit();
					}
				}
			});

		    var view = new ResetPasswordForm({
		        el: '#resetPasswordForm',
		        model: new ResetPasswordModel()
		    });
		});
	</script>
{% endblock %}